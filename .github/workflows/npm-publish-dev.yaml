
name: dev-ums
on:
  push:
    branches:
      - development

env:
  AWS_REGION: ap-south-1
  TAG: 0
  imagetag: 0
  DEV_MONITOR_ID: 72814581
  
jobs:
  semantic-release:
    name: semantic_release
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout branch "development"
        uses: actions/checkout@v2
        with:
          ref: "development"
          fetch-depth: 0

      # - name: semantic configuration
      #   run: |
      #     cat > release.config.js <<- "EOF"
      #       module.exports={"branches":["development"],
      #       "repositoryUrl":"https://github.com/byjus-orders/microservices-ums",
      #       "plugins":[
      #         "@semantic-release/commit-analyzer",
      #         "@semantic-release/release-notes-generator",
      #         "@semantic-release/github"]}
      - name: create a release
        run: |
          npm i -g semantic-release
          npm i -g @semantic-release/changelog
          npx semantic-release

          git config user.name "${{ secrets.GH_ADMIN_USERNAME }}"
          git config user.email "${{ secrets.GH_ADMIN_EMAIL }}"
          git remote set-url origin https://${{secrets.GH_ADMIN_USERNAME}}:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
          git add .
          git commit -m"changelog and package.json release[skip ci]
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deployment:
    if: always()
    needs:  semantic-release
    name: deployment
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: mute the datadog alert monitor
        run: |
        curl --location --request POST "https://api.datadoghq.com/api/v1/monitor/${{env.DEV_MONITOR_ID}}/mute" \
        --header "Content-Type: application/json" \
        --header "DD-API-KEY: ${{ secrets.DD_API_KEY }}" \
        --header "DD-APPLICATION-KEY: ${{ secrets.DD_APPLICATION_KEY }}"

      - name: just logging
        id: image
        run: |
          if [ 1 != "" ]; then
            echo "::set-output name=imagetag::1.22"
          else
            echo "::set-output name=imagetag::$(date +%Y-%m-%d-%H%M%S)"
          fi
      - name: log image
        run: |
         echo "${{ steps.image.outputs.imagetag }}"
         echo "working"


      - name: mute the datadog alert monitor
        run: |
        curl --location --request POST "https://api.datadoghq.com/api/v1/monitor/${{env.DEV_MONITOR_ID}}/mute" \
        --header "Content-Type: application/json" \
        --header "DD-API-KEY: ${{ secrets.DD_API_KEY }}" \
        --header "DD-APPLICATION-KEY: ${{ secrets.DD_APPLICATION_KEY }}"